// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;

    [Serialized]
    [LocDisplayName("Crispy Bacon")]
    [Weight(400)]
    [Ecopedia("Food", "Meat", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class CrispyBaconItem : FoodItem
    {
        public override LocString DisplayNamePlural     => Localizer.DoStr("Crispy Bacon");
        public override LocString DisplayDescription    => Localizer.DoStr("Give me all the bacon and eggs you have.");
        
        public override float Calories                  => 800;
        public override Nutrients Nutrition             => new Nutrients() { Carbs = 0, Fat = 26, Protein = 18, Vitamins = 0};
    }

    [RequiresSkill(typeof(CookingSkill), 3)]
    public partial class CrispyBaconRecipe :
        RecipeFamily
    {
        public CrispyBaconRecipe()
        {
            var product = new Recipe(
                "CrispyBacon",
                Localizer.DoStr("Crispy Bacon"),
                new IngredientElement[]
                {
                    new IngredientElement(typeof(RawBaconItem), 4, typeof(CookingSkill), typeof(CookingLavishResourcesTalent)),   
                },
                new CraftingElement<CrispyBaconItem>(1),
                new CraftingElement<TallowItem>(4f)  
                );

            this.Recipes = new List<Recipe> { product };
            this.LaborInCalories = CreateLaborInCaloriesValue(40, typeof(CookingSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(CrispyBaconRecipe), 4, typeof(CookingSkill), typeof(CookingFocusedSpeedTalent), typeof(CookingParallelSpeedTalent));
            this.ModsPreInitialize();
            this.Initialize(Localizer.DoStr("Crispy Bacon"), typeof(CrispyBaconRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(typeof(CastIronStoveObject), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }
}
