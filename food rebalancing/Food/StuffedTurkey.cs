// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;

    [Serialized]
    [LocDisplayName("Stuffed Turkey")]
    [Weight(500)]
    [Ecopedia("Food", "Baking", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class StuffedTurkeyItem : FoodItem
    {
        public override LocString DisplayDescription    => Localizer.DoStr("To give thanks for fact that this food items gives two nutrients more than other food at the same tier.");
        
        public override float Calories                  => 1500;
        public override Nutrients Nutrition             => new Nutrients() { Carbs = 17, Fat = 16, Protein = 20, Vitamins = 11};
    }

    [RequiresSkill(typeof(AdvancedBakingSkill), 4)]
    public partial class StuffedTurkeyRecipe :
        RecipeFamily
    {
        public StuffedTurkeyRecipe()
        {
            var product = new Recipe(
                "StuffedTurkey",
                Localizer.DoStr("Stuffed Turkey"),
                new IngredientElement[]
                {
                    new IngredientElement(typeof(PrimeCutItem), 4, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)), 
                    new IngredientElement(typeof(BreadItem), 1, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)), 
                    new IngredientElement(typeof(VegetableMedleyItem), 1, typeof(AdvancedBakingSkill), typeof(AdvancedBakingLavishResourcesTalent)),   
                },
                new CraftingElement<StuffedTurkeyItem>(1)
                );

            this.Recipes = new List<Recipe> { product };
            this.LaborInCalories = CreateLaborInCaloriesValue(40, typeof(AdvancedBakingSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(StuffedTurkeyRecipe), 4, typeof(AdvancedBakingSkill), typeof(AdvancedBakingFocusedSpeedTalent), typeof(AdvancedBakingParallelSpeedTalent));
            this.ModsPreInitialize();
            this.Initialize(Localizer.DoStr("Stuffed Turkey"), typeof(StuffedTurkeyRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(typeof(BakeryOvenObject), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }
}
